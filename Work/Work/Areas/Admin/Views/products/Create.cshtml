@model Work.Models.product

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}


<style>
    /* Add this style to your existing stylesheet or create a new one */

    /* Style for the form container */
    .form-horizontal {
        width: 80%;
        margin: 50px auto;
        padding: 20px;
        background-color: #f8f9fa;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    /* Form group styling */
    .form-group {
        margin-bottom: 15px;
        display: flex;
        flex-direction: column;
    }

        /* Label styling */
        .form-group label {
            font-weight: bold;
            color: #495057;
            margin-bottom: 5px;
        }

    /* Input styling */
    .form-control {
        width: 100%;
        padding: 10px;
        box-sizing: border-box;
        border: 1px solid #ced4da;
        border-radius: 4px;
    }

    /* Button styling */
    .btn-default {
        background-color: #007bff;
        color: #fff;
        border: none;
        padding: 12px 20px;
        cursor: pointer;
        border-radius: 4px;
    }

        /* Hover effect for the button */
        .btn-default:hover {
            background-color: #0056b3;
        }

    /* Back to list link styling */
    .back-to-list {
        display: block;
        margin-top: 20px;
        color: #007bff;
        text-decoration: none;
    }

        /* Hover effect for the back to list link */
        .back-to-list:hover {
            text-decoration: underline;
        }

</style>


    @using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data", id = "productForm" }))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>product</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.categoryID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.categoryID, ViewBag.categoryID as SelectList, "Select Category", new { @class = "form-control", id = "categoryID" })
            @Html.ValidationMessageFor(model => model.categoryID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.subcategoryID, "Subcategory", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.subcategoryID, ViewBag.subcategoryID as SelectList, "Select Subcategory", new { @class = "form-control", id = "subcategoryID" })
            @Html.ValidationMessageFor(model => model.subcategoryID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.productID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.productID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "productID" } })
            @Html.ValidationMessageFor(model => model.productID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.productName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.productName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.productName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.avatar, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="image" class="form-control" />
            @Html.ValidationMessageFor(model => model.avatar, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.status)
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.sale, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.sale, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.sale, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.authorID, "Author", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.authorID, ViewBag.authorID as SelectList, "Select Author", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.authorID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.supplierID, "Supplier", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.supplierID, ViewBag.supplierID as SelectList, "Select Supplier", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.supplierID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.createAt, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.createAt, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.createAt, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.updateAt, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.updateAt, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.updateAt, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.totalStart, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.totalStart, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.totalStart, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.totalFeedback, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.totalFeedback, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.totalFeedback, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.totalOrder, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.totalOrder, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.totalOrder, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <div class="back-to-list">
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function () {
        // Function to update productID based on categoryID and subcategoryID
        function updateProductID() {
            var categoryID = $("#categoryID").val();
            var subcategoryID = $("#subcategoryID").val();

            // Logic to generate productID based on categoryID and subcategoryID
            var generatedProductID = categoryID + subcategoryID;

            // Update the value of productID field
            $("#productID").val(generatedProductID);
        }

        // Attach the updateProductID function to change events of categoryID and subcategoryID dropdowns
        $("#categoryID, #subcategoryID").change(updateProductID);

        // Call updateProductID initially to set the initial value
        updateProductID();
    });
</script>

    }
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
